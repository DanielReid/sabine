{"version":3,"sources":["StudentNames.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StudentNames","names","changeCallback","handleNameChanged","prevName","event","target","value","_","map","name","idx","TextField","type","id","onChange","partial","renderSequences","sequences","nWeeks","Table","TableHead","TableRow","range","n","TableBody","sequence","renderSequence","sendEvent","TableCell","from","to","genSequences","students","weeks","previousAssignments","student","fromPairs","others","reject","buildChain","sampleSize","length","chain","updated","start","todos","find","todo","tail","console","log","App","useState","nStudents","setNStudents","setStudents","setSequences","setNWeeks","studentNames","setStudentNames","getNMissing","sequenceLengths","sum","useEffect","uniqueNamesGenerator","dictionaries","className","label","inputProps","min","max","step","Number","parseInt","defaultValue","newName","indexOf","Object","assign","ButtonGroup","Button","variant","color","onClick","bestChains","bestNMissing","nMissing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681e1d48.chunk.js","sourcesContent":["import { TextField } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport React from \"react\";\nexport default function StudentNames({\n  names,\n  changeCallback,\n}: {\n  names: string[];\n  changeCallback: (prevName: string, newName: string) => void;\n}) {\n  function handleNameChanged(prevName: string, event: any) {\n    changeCallback(prevName, event.target.value);\n  }\n  return (\n    <div>\n      {_.map(names, (name, idx) => (\n        <TextField\n          type=\"text\"\n          id={`${idx}-input`}\n          key={`${idx}-input`}\n          onChange={_.partial(handleNameChanged, name)}\n          value={name}\n        />\n      ))}\n    </div>\n  );\n}\n","import {\n  Button,\n  ButtonGroup,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { names, uniqueNamesGenerator } from \"unique-names-generator\";\nimport \"./App.css\";\nimport StudentNames from \"./StudentNames\";\n\ntype Student = {\n  id: number;\n  name: string;\n};\n\ntype SendEvent = {\n  from: Student;\n  to: Student;\n};\n\nconst N_STUDENTS = 7;\nconst N_WEEKS = 6;\nconst MAX_TRIES = 2000;\n\nfunction renderSequences(sequences: SendEvent[][], nWeeks: number) {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          {_.map(_.range(1, nWeeks + 1), (n) => (\n            <th>{`Week ${n}`}</th>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {_.map(sequences, (sequence, idx) => (\n          <TableRow key={\"seq\" + idx}>{renderSequence(sequence)}</TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction renderSequence(sequence: SendEvent[]) {\n  return _.map(sequence, (sendEvent: SendEvent) => (\n    <TableCell key={sendEvent?.from?.id + \"→\" + sendEvent?.to?.id}>\n      {`${sendEvent?.from?.name}→${sendEvent?.to?.name}`}\n    </TableCell>\n  ));\n}\nfunction genSequences(students: Student[], weeks: number[]): SendEvent[][] {\n  let previousAssignments = _(students)\n    .map((student) => [student.id, {}])\n    .fromPairs()\n    .value();\n  return _.map(students, (student: Student): SendEvent[] => {\n    const others = _.reject(students, [\"id\", student.id]);\n    const { chain, updated } = buildChain(\n      student,\n      _.sampleSize(others, others.length),\n      previousAssignments,\n      weeks\n    );\n    previousAssignments = updated;\n    return chain;\n  });\n}\n\ntype ChainResponse = {\n  chain: SendEvent[];\n  updated: Record<number, Record<number, boolean>>;\n};\n\nfunction buildChain(\n  start: Student,\n  todos: Student[],\n  previousAssignments: Record<number, Record<number, boolean>>,\n  weeks: number[]\n): ChainResponse {\n  if (!todos.length || !weeks.length) {\n    return {\n      chain: [],\n      updated: previousAssignments,\n    };\n  } else {\n    const to = _.find(todos, (todo) => !previousAssignments[start.id][todo.id]);\n    if (!to) {\n      console.log(\"impossible\");\n      return {\n        chain: [],\n        updated: previousAssignments,\n      };\n    } else {\n      const { chain, updated } = buildChain(\n        to,\n        _.reject(todos, [\"id\", to.id]),\n        {\n          ...previousAssignments,\n          [start.id]: {\n            ...previousAssignments[start.id],\n            [to.id]: true,\n          },\n        },\n        _.tail(weeks)\n      );\n      return { chain: [{ from: start, to: to }, ...chain], updated: updated };\n    }\n  }\n}\n\nfunction App() {\n  const [nStudents, setNStudents] = useState(N_STUDENTS);\n  const [students, setStudents] = useState<Student[]>();\n  const [sequences, setSequences] = useState<SendEvent[][]>();\n  const [nWeeks, setNWeeks] = useState(N_WEEKS);\n  const [studentNames, setStudentNames] = useState<string[]>();\n\n  function handleNStudentsChanged(event: any) {\n    if (\n      event?.target?.value &&\n      Number.parseInt(event.target.value) !== nStudents\n    ) {\n      setNStudents(Number.parseInt(event.target.value));\n    }\n  }\n  function handleNWeeksChanged(event: any) {\n    if (\n      event?.target?.value &&\n      Number.parseInt(event.target.value) !== nWeeks\n    ) {\n      setNWeeks(Number.parseInt(event.target.value));\n    }\n  }\n\n  function handleRegenclick() {\n    if (students) {\n      setSequences(genSequences(students, _.range(1, nWeeks + 1)));\n    }\n  }\n\n  function handleNameChange(prevName: string, newName: string) {\n    if (studentNames) {\n      const idx = studentNames.indexOf(prevName);\n      setStudentNames(Object.assign([], studentNames, { [idx]: newName }));\n    }\n  }\n\n  function handleSearchClick() {\n    if (students) {\n      let n = 0;\n      let bestNMissing = nWeeks * nStudents + 1;\n      let bestChains;\n      while (n < MAX_TRIES && bestNMissing > 0) {\n        const sequences = genSequences(students, _.range(1, nWeeks + 1));\n        const nMissing = getNMissing(sequences);\n        if (nMissing < bestNMissing) {\n          bestNMissing = nMissing;\n          bestChains = sequences;\n        }\n        ++n;\n      }\n      console.log(n);\n      setSequences(bestChains);\n    }\n  }\n\n  function getNMissing(sequences: SendEvent[][]) {\n    const sequenceLengths = _.map(\n      sequences,\n      (sequence) => nWeeks - sequence.length\n    );\n    return _.sum(sequenceLengths);\n  }\n\n  useEffect(() => {\n    if (studentNames?.length) {\n      const students = _.map(_.range(1, nStudents + 1), (n) => {\n        return {\n          id: n,\n          name: studentNames[n - 1],\n        };\n      });\n      setStudents(students);\n    }\n  }, [nStudents, studentNames]);\n\n  useEffect(() => {\n    setStudentNames(\n      _.map(_.range(1, nStudents + 1), () =>\n        uniqueNamesGenerator({ dictionaries: [names] })\n      )\n    );\n  }, [nStudents]);\n  useEffect(() => {\n    if (students) {\n      setSequences(genSequences(students, _.range(1, nWeeks + 1)));\n    }\n  }, [nWeeks, students]);\n\n  return sequences ? (\n    <div className=\"App\">\n      <div>\n        <TextField\n          type=\"number\"\n          label=\"Aantal studenten\"\n          id=\"n-students\"\n          inputProps={{ min: \"0\", max: \"10\", step: \"1\" }}\n          onChange={handleNStudentsChanged}\n          defaultValue={N_STUDENTS}\n        />\n        <TextField\n          type=\"number\"\n          label=\"Aantal weken\"\n          id=\"n-weeks\"\n          inputProps={{ min: \"0\", max: \"10\", step: \"1\" }}\n          onChange={handleNWeeksChanged}\n          defaultValue={N_WEEKS}\n        />\n      </div>\n      {studentNames ? (\n        <StudentNames names={studentNames} changeCallback={handleNameChange} />\n      ) : (\n        <></>\n      )}\n      <div>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleRegenclick}\n          >\n            Opnieuw\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSearchClick}\n          >\n            Zoek\n          </Button>\n        </ButtonGroup>\n        {renderSequences(sequences, nWeeks)}\n      </div>\n    </div>\n  ) : (\n    <></>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}