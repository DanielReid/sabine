{"version":3,"sources":["StudentNames.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StudentNames","names","changeCallback","handleNameChanged","prevName","event","target","value","_","map","name","idx","TextField","type","id","onChange","partial","renderSequences","sequences","nWeeks","eventsByWeek","zip","Table","TableHead","TableRow","range","n","TableBody","sequence","renderSequence","sendEvent","weekEvents","weekEventsBySender","groupBy","sentMoreThanOnce","mapValues","ar","length","TableCell","style","background","from","to","genSequences","students","weeks","previousAssignments","student","fromPairs","others","reject","buildChain","sampleSize","chain","updated","start","todos","find","todo","tail","console","log","getNMissing","sequenceLengths","sum","getNMaxSubmissions","transposed","maxSubmissionsForWeek","max","week","size","App","useState","nStudents","setNStudents","setStudents","setSequences","setNWeeks","nMaxSubmissionsPerWeek","setNMaxSubmissionsPerWeek","studentNames","setStudentNames","useEffect","uniqueNamesGenerator","dictionaries","className","label","inputProps","min","step","Number","parseInt","defaultValue","newName","indexOf","Object","assign","ButtonGroup","Button","variant","color","onClick","bestNMissing","bestChains","nMissing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87d46d1f.chunk.js","sourcesContent":["import { TextField } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport React from \"react\";\nexport default function StudentNames({\n  names,\n  changeCallback,\n}: {\n  names: string[];\n  changeCallback: (prevName: string, newName: string) => void;\n}) {\n  function handleNameChanged(prevName: string, event: any) {\n    changeCallback(prevName, event.target.value);\n  }\n  return (\n    <div>\n      {_.map(names, (name, idx) => (\n        <TextField\n          type=\"text\"\n          id={`${idx}-input`}\n          key={`${idx}-input`}\n          onChange={_.partial(handleNameChanged, name)}\n          value={name}\n        />\n      ))}\n    </div>\n  );\n}\n","import {\n  Button,\n  ButtonGroup,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { names, uniqueNamesGenerator } from 'unique-names-generator';\nimport './App.css';\nimport StudentNames from './StudentNames';\n\ntype Student = {\n  id: number;\n  name: string;\n};\n\ntype SendEvent = {\n  from: Student;\n  to: Student;\n};\n\nconst N_STUDENTS = 7;\nconst N_WEEKS = 6;\nconst MAX_TRIES = 2000;\nconst N_MAX_SUBMISSIONS = 2;\n\nfunction renderSequences(sequences: SendEvent[][], nWeeks: number) {\n  const eventsByWeek = _.zip(...sequences) as SendEvent[][];\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          {_.map(_.range(1, nWeeks + 1), (n) => (\n            <th key={`week-${n}`}>{`Week ${n}`}</th>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {_.map(sequences, (sequence, idx) => (\n          <TableRow key={'seq' + idx}>\n            {renderSequence(sequence, eventsByWeek)}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction renderSequence(sequence: SendEvent[], eventsByWeek: SendEvent[][]) {\n  return _.map(sequence, (sendEvent: SendEvent, idx: number) => {\n    const weekEvents = eventsByWeek[idx];\n    const weekEventsBySender = _.groupBy(weekEvents, 'from.name');\n    const sentMoreThanOnce = _.mapValues(\n      weekEventsBySender,\n      (ar) => ar.length > 1\n    );\n    return (\n      <TableCell\n        style={{\n          background: sentMoreThanOnce[sendEvent.from.name]\n            ? '#f4f96a'\n            : 'white',\n        }}\n        key={`${sendEvent?.from?.id}→${sendEvent?.to?.id}`}\n      >\n        {`${sendEvent?.from?.name}→${sendEvent?.to?.name}`}\n      </TableCell>\n    );\n  });\n}\n\nfunction genSequences(students: Student[], weeks: number[]): SendEvent[][] {\n  let previousAssignments = _(students)\n    .map((student) => [student.id, {}])\n    .fromPairs()\n    .value();\n  return _.map(students, (student: Student): SendEvent[] => {\n    const others = _.reject(students, ['id', student.id]);\n    const { chain, updated } = buildChain(\n      student,\n      _.sampleSize(others, others.length),\n      previousAssignments,\n      weeks\n    );\n    previousAssignments = updated;\n    return chain;\n  });\n}\n\ntype ChainResponse = {\n  chain: SendEvent[];\n  updated: Record<number, Record<number, boolean>>;\n};\n\nfunction buildChain(\n  start: Student,\n  todos: Student[],\n  previousAssignments: Record<number, Record<number, boolean>>,\n  weeks: number[]\n): ChainResponse {\n  if (!todos.length || !weeks.length) {\n    return {\n      chain: [],\n      updated: previousAssignments,\n    };\n  } else {\n    const to = _.find(todos, (todo) => !previousAssignments[start.id][todo.id]);\n    if (!to) {\n      console.log('impossible');\n      return {\n        chain: [],\n        updated: previousAssignments,\n      };\n    } else {\n      const { chain, updated } = buildChain(\n        to,\n        _.reject(todos, ['id', to.id]),\n        {\n          ...previousAssignments,\n          [start.id]: {\n            ...previousAssignments[start.id],\n            [to.id]: true,\n          },\n        },\n        _.tail(weeks)\n      );\n      return { chain: [{ from: start, to: to }, ...chain], updated: updated };\n    }\n  }\n}\n\nfunction getNMissing(sequences: SendEvent[][], nWeeks: number) {\n  const sequenceLengths = _.map(\n    sequences,\n    (sequence) => nWeeks - sequence.length\n  );\n  return _.sum(sequenceLengths);\n}\n\nfunction getNMaxSubmissions(sequences: SendEvent[][]): number {\n  const transposed = _.zip(...sequences) as SendEvent[][];\n  const maxSubmissions = _(transposed).map(maxSubmissionsForWeek).max();\n  return maxSubmissions || 0;\n}\n\nfunction maxSubmissionsForWeek(week: SendEvent[]): number {\n  return _(week).groupBy('from.name').map(_.size).max() || 0;\n}\n\nfunction App() {\n  const [nStudents, setNStudents] = useState(N_STUDENTS);\n  const [students, setStudents] = useState<Student[]>();\n  const [sequences, setSequences] = useState<SendEvent[][]>();\n  const [nWeeks, setNWeeks] = useState(N_WEEKS);\n  const [nMaxSubmissionsPerWeek, setNMaxSubmissionsPerWeek] =\n    useState(N_MAX_SUBMISSIONS);\n  const [studentNames, setStudentNames] = useState<string[]>();\n\n  function handleNStudentsChanged(event: any) {\n    if (\n      event?.target?.value &&\n      Number.parseInt(event.target.value) !== nStudents\n    ) {\n      setNStudents(Number.parseInt(event.target.value));\n    }\n  }\n  function handleNWeeksChanged(event: any) {\n    if (\n      event?.target?.value &&\n      Number.parseInt(event.target.value) !== nWeeks\n    ) {\n      setNWeeks(Number.parseInt(event.target.value));\n    }\n  }\n  function handleMaxSubmissionsChanged(event: any) {\n    if (\n      event?.target?.value &&\n      Number.parseInt(event.target.value) !== nMaxSubmissionsPerWeek\n    ) {\n      setNMaxSubmissionsPerWeek(Number.parseInt(event.target.value));\n    }\n  }\n\n  function handleRegenclick() {\n    if (students) {\n      setSequences(genSequences(students, _.range(1, nWeeks + 1)));\n    }\n  }\n\n  function handleNameChange(prevName: string, newName: string) {\n    if (studentNames) {\n      const idx = studentNames.indexOf(prevName);\n      setStudentNames(Object.assign([], studentNames, { [idx]: newName }));\n    }\n  }\n\n  function handleSearchClick() {\n    if (students) {\n      let n = 0;\n      let bestNMissing = nWeeks * nStudents + 1;\n      let bestChains: SendEvent[][] = [];\n      do {\n        const sequences = genSequences(students, _.range(1, nWeeks + 1));\n        const nMissing = getNMissing(sequences, nWeeks);\n        if (\n          nMissing < bestNMissing &&\n          getNMaxSubmissions(sequences) <= nMaxSubmissionsPerWeek\n        ) {\n          bestNMissing = nMissing;\n          bestChains = sequences;\n        }\n        ++n;\n      } while (n < MAX_TRIES && bestNMissing > 0);\n      console.log(n);\n      setSequences(bestChains);\n    }\n  }\n\n  useEffect(() => {\n    if (studentNames?.length) {\n      const students = _.map(_.range(1, nStudents + 1), (n) => {\n        return {\n          id: n,\n          name: studentNames[n - 1],\n        };\n      });\n      setStudents(students);\n    }\n  }, [nStudents, studentNames]);\n\n  useEffect(() => {\n    setStudentNames(\n      _.map(_.range(1, nStudents + 1), () =>\n        uniqueNamesGenerator({ dictionaries: [names] })\n      )\n    );\n  }, [nStudents]);\n\n  useEffect(() => {\n    if (students) {\n      setSequences(genSequences(students, _.range(1, nWeeks + 1)));\n    }\n  }, [nWeeks, students, nMaxSubmissionsPerWeek]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <TextField\n          type=\"number\"\n          label=\"Aantal studenten\"\n          id=\"n-students\"\n          inputProps={{ min: '0', max: '10', step: '1' }}\n          onChange={handleNStudentsChanged}\n          defaultValue={N_STUDENTS}\n        />\n        <TextField\n          type=\"number\"\n          label=\"Aantal weken\"\n          id=\"n-weeks\"\n          inputProps={{ min: '0', max: '10', step: '1' }}\n          onChange={handleNWeeksChanged}\n          defaultValue={N_WEEKS}\n        />\n        <TextField\n          type=\"number\"\n          label=\"Max. aantal keer zenden per week\"\n          id=\"n-double-submissions\"\n          inputProps={{ min: '0', max: '10', step: '1' }}\n          onChange={handleMaxSubmissionsChanged}\n          defaultValue={N_MAX_SUBMISSIONS}\n        />\n      </div>\n      {studentNames ? (\n        <StudentNames names={studentNames} changeCallback={handleNameChange} />\n      ) : (\n        <></>\n      )}\n      <div>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleRegenclick}\n          >\n            Opnieuw\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSearchClick}\n          >\n            Zoek\n          </Button>\n        </ButtonGroup>\n        {sequences ? renderSequences(sequences, nWeeks) : <></>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}